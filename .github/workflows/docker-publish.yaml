name: Docker image for multi-arch

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'PostgreSQL version'
        required: true
        type: choice
        options:
          - 11
          - 12
          - 13
          - 14
          - 15

env:
  PG_IMAGE: postgres-debugger

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: print-vars

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build amd64 and push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: docker
          platforms: linux/amd64
          build-args: TAG=${{ inputs.version }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PG_IMAGE }}:${{ inputs.version }}-amd64

      - name: Build arm64 and push to Docker Hub
        if: inputs.version == '14' || inputs.version == '15'
        uses: docker/build-push-action@v4
        with:
          context: docker
          platforms: linux/arm64
          build-args: TAG=${{ inputs.version }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PG_IMAGE }}:${{ inputs.version }}-arm64
      
      - name: Create manifest for multi-arch
        if: inputs.version == '14' || inputs.version == '15'
        run: |
          docker manifest creae ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PG_IMAGE }}:${{ inputs.version }} \
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PG_IMAGE }}:${{ inputs.version }}-amd64 \
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PG_IMAGE }}:${{ inputs.version }}-arm64
        
      - name: Ceate manifest for single arch
        if: inputs.version == '11' || inputs.version == '12' || inputs.version == '13'
        run: |
          docker manifest create ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PG_IMAGE }}:${{ inputs.version }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PG_IMAGE }}:${{ inputs.version }}-amd64
            
      - name: Push manifest
        run: |
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PG_IMAGE }}:${{ inputs.version }}

    

