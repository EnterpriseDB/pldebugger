name: Docker image for multi-arch

on:
  workflow_dispatch:
  schedule:
    #every month the 23rd at 6:23am
    - cron: '23 6 23 * *'

env:
  PG_IMAGE: postgres-debugger
  TAGS: 

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - bullseye
          - bookworm
        platform: 
          - linux/amd64
          - linux/amd64,linux/arm64
        version:
          - 11
          - 12
          - 13
          - 14
          - 15
        exclude:
          - platform: linux/amd64,linux/arm64
            version: 11
          - platform: linux/amd64,linux/arm64
            version: 12
          - platform: linux/amd64,linux/arm64
            version: 13
          - platform: linux/amd64
            version: 14
          - platform: linux/amd64
            version: 15
        include:
          - image: bullseye
            tag: 11
          - platform: linux/amd64
            version: 15
    steps:

      - name: Setup default tags
        run: |
          echo "Setting up tags for bullseye"
        env:
          TAGS: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PG_IMAGE }}:${{ matrix.version }}-${{ matrix.image }}
          
      - name: Add global tags for bookworm
        if: matrix.image == 'bookworm'
        run: |
          echo "Setting up tags for bookworm and adding to global tags"
        env:
          TAGS: ${{ env.TAGS }},${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PG_IMAGE }}:${{ matrix.version }}

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: print-vars

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: docker
          platforms: ${{ matrix.platform }}
          build-args: |
             TAG=${{ matrix.version }}
             BASE_IMAGE=${{ matrix.version }}-${{ matrix.image }}
          push: true
          tags: ${{ env.TAGS }}
  